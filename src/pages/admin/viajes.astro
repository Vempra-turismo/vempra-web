---
import AdminLayout from '@/layouts/AdminLayout.astro';
import db from '@/lib/turso';

export const prerender = false;

// --- Obtener datos para los selectores del formulario ---
const countries = (await db.execute("SELECT id, name FROM countries ORDER BY name")).rows;
const localities = (await db.execute("SELECT id, name, country_id FROM localities ORDER BY name")).rows;
const tags = (await db.execute("SELECT id, name FROM tags ORDER BY name")).rows;
const departures = (await db.execute("SELECT id, name FROM departures ORDER BY name")).rows;

let formMessage: { type: 'success' | 'error'; text: string } | null = null;

// --- Lógica para mostrar mensajes de éxito/error desde la redirección ---
const success = Astro.url.searchParams.get('success');
const error = Astro.url.searchParams.get('error');

if (success) {
    formMessage = { type: 'success', text: '¡Operación completada con éxito!' };
}
if (error) {
    formMessage = { type: 'error', text: decodeURIComponent(error) };
}

// --- Cargar datos para editar (si se proporciona un ID en la URL) ---
let tripToEdit = null;
let tripTags = [];
let countryOfTripToEdit = null;
const editId = Astro.url.searchParams.get('edit');

if (editId) {
    const result = await db.execute({ sql: "SELECT * FROM trips WHERE id = ?", args: [editId] });
    if (result.rows.length > 0) {
        tripToEdit = result.rows[0];
        if (tripToEdit.locality_id) {
            const localityInfo = localities.find(l => String(l.id) === String(tripToEdit.locality_id));
            if (localityInfo) countryOfTripToEdit = localityInfo.country_id;
        }
        const tagsResult = await db.execute({ sql: "SELECT tag_id FROM trip_tags WHERE trip_id = ?", args: [editId] });
        tripTags = tagsResult.rows.map((row) => row.tag_id);
    }
}

// --- Obtener la lista de viajes existentes para mostrarla ---
const tripsResult = await db.execute({
  sql: `
    SELECT 
      t.id, t.title, t.price, t.days, t.travel_type,
      l.name as locality_name, c.name as country_name,
      d.name as departure_name
    FROM trips t
    LEFT JOIN localities l ON t.locality_id = l.id
    LEFT JOIN countries c ON l.country_id = c.id
    LEFT JOIN departures d ON t.departure_id = d.id
    ORDER BY t.id DESC
  `,
  args: []
});
const trips = tripsResult.rows;
---

<AdminLayout title="Gestionar Viajes">
  <div class="mb-6">
    <a href="/admin/" class="text-blue-600 hover:underline">&larr; Volver al Panel Principal</a>
  </div>

  {formMessage && (
    <div class:list={[
        "px-4 py-3 rounded-lg relative mb-6 border text-center",
        { 'bg-red-100 border-red-400 text-red-700': formMessage.type === 'error' },
        { 'bg-green-100 border-green-400 text-green-700': formMessage.type === 'success' }
    ]} role="alert">
        <strong class="font-bold">{formMessage.type === 'error' ? '¡Error!' : '¡Éxito!'}</strong>
        <span class="block sm:inline ml-2">{formMessage.text}</span>
    </div>
  )}

  <div class="space-y-12">
    <!-- Formulario de Viajes -->
    <section id="trip-editor" class="bg-white p-8 rounded-xl shadow-lg">
      <h2 class="text-2xl font-semibold text-primary mb-6">{tripToEdit ? 'Editar Viaje' : 'Añadir Nuevo Viaje'}</h2>
      <form id="trip-form" action="/api/trips/save" method="POST" class="space-y-8" enctype="multipart/form-data">
        {tripToEdit && <input type="hidden" name="id" value={tripToEdit.id} />}
        {tripToEdit && <input type="hidden" name="imageUrl" value={tripToEdit.imageUrl} />}

        <fieldset class="border p-4 rounded-md">
            <legend class="text-xl font-semibold px-2">Información General</legend>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700">Título del Viaje</label>
                    <input type="text" name="title" id="title" value={tripToEdit?.title || ''} required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                </div>
                <div>
                    <label for="url" class="block text-sm font-medium text-gray-700">URL (ej: peru-magico)</label>
                    <input type="text" name="url" id="url" value={tripToEdit?.url || ''} required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                </div>
                <div>
                    <label for="slogan" class="block text-sm font-medium text-gray-700">Slogan</label>
                    <input type="text" name="slogan" id="slogan" value={tripToEdit?.slogan || ''} class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                </div>
                <div>
                    <label for="price" class="block text-sm font-medium text-gray-700">Precio (USD)</label>
                    <input type="number" name="price" id="price" value={tripToEdit?.price || ''} required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                </div>
                <div>
                    <label for="days" class="block text-sm font-medium text-gray-700">Días</label>
                    <input type="text" name="days" id="days" value={tripToEdit?.days || ''} required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                </div>
                <div class="md:col-span-2">
                    <label for="imageFile" class="block text-sm font-medium text-gray-700">Imagen Principal</label>
                    <input type="file" name="imageFile" id="imageFile" accept="image/*" class="mt-1 block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 focus:outline-none file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100">
                    {tripToEdit?.imageUrl && (
                        <div class="mt-2">
                            <p class="text-sm text-gray-600">Imagen actual:</p>
                            <img src={tripToEdit.imageUrl} alt="Imagen actual" class="mt-2 h-24 w-auto rounded-lg" />
                            <p class="text-xs text-gray-500 mt-1">Para reemplazarla, simplemente sube una nueva imagen.</p>
                        </div>
                    )}
                </div>
            </div>
        </fieldset>
        
        <fieldset class="border p-4 rounded-md">
            <legend class="text-xl font-semibold px-2">Categorización</legend>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                 <div>
                    <label for="country" class="block text-sm font-medium text-gray-700">Destino</label>
                    <select id="country" name="country_id" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                        <option value="">Selecciona un destino</option>
                        {countries.map((country: any) => (
                        <option value={country.id} selected={countryOfTripToEdit != null && String(countryOfTripToEdit) === String(country.id)}>{country.name}</option>
                        ))}
                    </select>
                </div>
                <div id="locality-wrapper" style="display: none;">
                    <label for="locality" class="block text-sm font-medium text-gray-700">Localidad</label>
                    <select id="locality" name="locality_id" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                        <option value="">Primero selecciona un destino</option>
                    </select>
                </div>
                <div>
                    <label for="travel_type" class="block text-sm font-medium text-gray-700">Forma de Viaje</label>
                    <select id="travel_type" name="travel_type" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                        <option value="Personalizado" selected={tripToEdit?.travel_type === 'Personalizado'}>Personalizado</option>
                        <option value="Grupal" selected={tripToEdit?.travel_type === 'Grupal'}>Grupal</option>
                    </select>
                </div>
                <div>
                    <label for="season_name" class="block text-sm font-medium text-gray-700">Temporada (ej: Verano 2025)</label>
                    <input type="text" name="season_name" id="season_name" value={tripToEdit?.season_name || ''} class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                </div>
                <div>
                    <label for="season_year" class="block text-sm font-medium text-gray-700">Año de la Temporada</label>
                    <input type="number" name="season_year" id="season_year" value={tripToEdit?.season_year || ''} class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50" placeholder="Ej: 2024">
                </div>
                <div>
                    <label for="departure" class="block text-sm font-medium text-gray-700">Salida desde</label>
                    <select id="departure" name="departure_id" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-50">
                        <option value="">Selecciona una salida</option>
                        {departures.map((departure: any) => ( <option value={departure.id} selected={tripToEdit?.departure_id != null && String(tripToEdit.departure_id) === String(departure.id)}>{departure.name}</option>))}
                    </select>
                </div>
            </div>
            <div class="mt-6">
                <label class="block text-sm font-medium text-gray-700">Temáticas (Etiquetas)</label>
                <div class="mt-2 grid grid-cols-2 md:grid-cols-4 gap-4">
                    {tags.map((tag: any) => (
                    <div class="flex items-start">
                        <div class="flex h-5 items-center">
                            <input id={`tag-${tag.id}`} name="tags" type="checkbox" value={tag.name} checked={tripTags.includes(tag.id)} class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500" />
                        </div>
                        <div class="ml-3 text-sm">
                            <label for={`tag-${tag.id}`} class="font-medium text-gray-700">{tag.name}</label>
                        </div>
                    </div>
                    ))}
                </div>
            </div>
        </fieldset>

        <div class="flex justify-end space-x-4 pt-4">
            {tripToEdit && <a href="/admin/viajes#trip-list" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">Cancelar</a>}
            <button type="submit" class="inline-flex justify-center rounded-md border border-transparent bg-primary py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-opacity-90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2">
                {tripToEdit ? 'Actualizar Viaje' : 'Guardar Viaje'}
            </button>
        </div>
      </form>
    </section>

    <section id="trip-list" class="bg-white p-8 rounded-xl shadow-lg">
      <h2 class="text-2xl font-semibold text-primary mb-4">Viajes Existentes</h2>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Título</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Destino</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Precio</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Días</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tipo</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Salida</th>
              <th class="relative px-6 py-3"><span class="sr-only">Acciones</span></th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {trips.map((trip: any) => (
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{trip.title}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{trip.locality_name || 'N/A'}, {trip.country_name || 'N/A'}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${trip.price}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{trip.days}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{trip.travel_type}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{trip.departure_name || 'N/A'}</td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-4">
                  <a href={`/admin/viajes?edit=${trip.id}`} class="text-indigo-600 hover:text-indigo-900">Editar</a>
                  <form action={`/api/trips/delete/${trip.id}`} method="POST" class="inline-block">
                    <button type="submit" class="text-red-600 hover:text-red-900" onclick="return confirm('¿Estás seguro de que quieres eliminar este viaje?');">Eliminar</button>
                  </form>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </section>
  </div>

<script define:vars={{ allLocalities: localities, selectedLocality: tripToEdit?.locality_id, initialCountryId: countryOfTripToEdit }}>
  document.addEventListener('DOMContentLoaded', () => {
    const countrySelect = document.querySelector('#country');
    const localitySelect = document.querySelector('#locality');
    const localityWrapper = document.getElementById('locality-wrapper');

    const updateLocalities = (countryId, localityIdToSelect) => {
        if (!localityWrapper || !localitySelect) return;
        localityWrapper.style.display = countryId ? 'block' : 'none';
        localitySelect.innerHTML = '<option value="">Selecciona una localidad</option>';

        if (countryId) {
            const filteredLocalities = allLocalities.filter(l => String(l.country_id) === String(countryId));
            filteredLocalities.forEach(loc => {
                const option = new Option(loc.name, loc.id.toString());
                if (localityIdToSelect && String(loc.id) === String(localityIdToSelect)) {
                    option.selected = true;
                }
                localitySelect.add(option);
            });
        }
    };

    if (countrySelect) {
        countrySelect.addEventListener('change', (e) => {
            updateLocalities(e.target.value, null);
        });
        // Initial load
        updateLocalities(initialCountryId, selectedLocality);
    }
  });
</script>
</AdminLayout>
