---
// src/components/Header.astro
import db from '../lib/turso';
const { navLinks: originalNavLinks } = Astro.props;

// Determinar si es la página de inicio para aplicar estilos diferentes
const isHomePage = Astro.url.pathname === '/';

// --- Obtener datos para los menús desplegables ---
// Consultas para obtener países y sus localidades
const { rows: countries } = await db.execute("SELECT id, name, url FROM countries WHERE url IS NOT NULL AND url <> '' ORDER BY name");
const { rows: localities } = await db.execute("SELECT name, url, country_id FROM localities WHERE url IS NOT NULL AND url <> '' ORDER BY name");
const { rows: departures } = await db.execute("SELECT name, url FROM departures WHERE url IS NOT NULL AND url <> '' ORDER BY name");
const { rows: seasonsResult } = await db.execute("SELECT DISTINCT season_name, season_year FROM trips WHERE season_name IS NOT NULL AND season_name != '' ORDER BY season_year DESC, season_name ASC");
const seasons = seasonsResult.map(s => ({ name: `${s.season_name} ${s.season_year}`, urlParam: encodeURIComponent(`${s.season_name} ${s.season_year}`) }));
const travelTypes = [
    { name: 'Grupal', urlParam: 'Grupal' },
    { name: 'Personalizado', urlParam: 'Personalizado' }
];

// Crear una estructura jerárquica para el menú de destinos
const destinations = countries.map((country: any) => ({
    ...country,
    localities: localities.filter((l: any) => l.country_id === country.id)
}));

---
<header 
    id="main-header" 
    class:list={[
        "fixed top-0 left-0 w-full z-50 transition-all duration-300 ease-in-out",
        // En la página de inicio, la cabecera empieza con fondo blanco y encogida
        { 'scrolled': isHomePage }
    ]}
    data-is-home={isHomePage}
>
    <div class="container mx-auto px-6">
        <nav class="flex items-center justify-between h-24 transition-all duration-500 ease-in-out" id="main-nav">
            <a href="/" class="logo-link block">
                <img src="/VEMPRA-VIAJES-LOGO-blanco.png" alt="Logo de mi empresa" class="logo-white h-20 transition-all duration-300 ease-in-out" />
                <img src="/VEMPRA-VIAJES-LOGO.png" alt="Logo de mi empresa" class="logo-dark h-20 hidden transition-all duration-300 ease-in-out" />
            </a>
            <div class="hidden md:flex items-center space-x-8 nav-links">
                <!-- Menú Desplegable: Destinos -->
                <div class="relative group">
                    <button class="font-semibold transition-colors duration-200 inline-flex items-center">
                        Destinos <svg class="w-4 h-4 ml-1.5 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                    </button>
                    <div class="dropdown-menu">
                        {destinations.length > 0 ? (
                            destinations.map((country: any) => (
                                <div class="relative group/sub">
                                    <a href={`/destinos/${country.url}`} class="dropdown-item flex justify-between items-center w-full">
                                        <span>{country.name}</span>
                                        {country.localities.length > 0 && (
                                            <svg class="w-4 h-4 text-gray-400 shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>
                                        )}
                                    </a>
                                    {country.localities.length > 0 && (
                                        <div class="absolute top-0 left-full w-56 bg-white rounded-lg shadow-xl p-2 opacity-0 invisible group-hover/sub:opacity-100 group-hover/sub:visible transition-all duration-300 -mt-2 ml-1">
                                            {country.localities.map((locality: any) => (
                                                <a href={`/paquetes?destino=locality:${locality.url}`} class="dropdown-item">{locality.name}</a>
                                            ))}
                                        </div>
                                    )}
                                </div>
                            ))
                        ) : (
                            <span class="dropdown-item text-gray-400 cursor-not-allowed">No hay destinos</span>
                        )}
                    </div>
                </div>

                <!-- Menú Desplegable: Salidas -->
                <div class="relative group">
                    <button class="font-semibold transition-colors duration-200 inline-flex items-center">
                        Salidas <svg class="w-4 h-4 ml-1.5 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                    </button>
                    <div class="dropdown-menu">
                        {departures.length > 0
                            ? departures.map((item: any) => <a href={`/paquetes?salida=${item.url}`} class="dropdown-item">{item.name}</a>)
                            : <span class="dropdown-item text-gray-400 cursor-not-allowed">No hay salidas</span>
                        }
                    </div>
                </div>

                <!-- Menú Desplegable: Tipo de Viaje -->
                <div class="relative group">
                    <button class="font-semibold transition-colors duration-200 inline-flex items-center">
                        Categorías <svg class="w-4 h-4 ml-1.5 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                    </button>
                    <div class="dropdown-menu">
                        {travelTypes.map(item => <a href={`/paquetes?tipo=${item.urlParam}`} class="dropdown-item">{item.name}</a>)}
                    </div>
                </div>

                <!-- Menú Desplegable: Temporada -->
                <div class="relative group">
                    <button class="font-semibold transition-colors duration-200 inline-flex items-center">
                        Temporada <svg class="w-4 h-4 ml-1.5 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                    </button>
                    <div class="dropdown-menu">
                        {seasons.map(item => <a href={`/paquetes?temporada=${item.urlParam}`} class="dropdown-item">{item.name}</a>)}
                    </div>
                </div>

                <!-- Link Promociones -->
                <a data-link-loading href="/paquetes?tag=Promocion" class="font-semibold transition-colors duration-200 inline-flex items-center justify-center text-primary border-2 border-primary rounded-full px-4 py-1 hover:bg-primary hover:text-white">
                    Promociones
                </a>

                <!-- Hoteles (placeholder) -->
                <a href="#" class="font-semibold text-gray-400 cursor-not-allowed" title="Próximamente">Hoteles</a>

                <!-- Links restantes -->
                {originalNavLinks.filter(link => !['Paquetes', 'Destinos'].includes(link.text)).map(link => (
                    <a href={link.url} class="font-semibold transition-colors duration-200">
                        {link.text}
                    </a>
                ))}
            </div>
            <!-- Botón de menú móvil (para pantallas pequeñas) -->
            <div class="md:hidden">
                <button id="mobile-menu-button" type="button" class="p-2 inline-flex items-center justify-center rounded-md text-inherit hover:bg-white/20 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
                    <span class="sr-only">Abrir menú principal</span>
                    <!-- Icono de hamburguesa -->
                    <svg id="menu-icon-open" class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
                    <!-- Icono de 'X' para cerrar -->
                    <svg id="menu-icon-close" class="hidden h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
            </div>
        </nav>
    </div>

    <!-- Pestaña para abrir menú en Home (Desktop) cuando se hace scroll -->
    <button id="collapsed-menu-trigger" class="fixed top-6 right-[-100px] z-[60] bg-primary hover:bg-opacity-90 text-white p-3 rounded-l-full shadow-lg transition-all duration-500 ease-in-out">
        <span class="sr-only">Abrir menú</span>
        <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
    </button>

    <!-- Panel del menú (usado por móvil y por la pestaña colapsada en Home) -->
    <div id="side-menu-panel" class="fixed top-0 right-0 md:w-96 w-full h-full bg-white shadow-2xl z-[70] transition-transform duration-500 ease-in-out">
        <div class="p-6">
            <div class="flex justify-between items-center mb-8">
                <h3 class="text-2xl font-bold text-primary">Menú</h3>
                <button id="close-side-menu" class="p-2 text-gray-500 hover:text-primary">
                    <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
            </div>
            <div class="flex flex-col space-y-4">
                <!-- Menú móvil -->
                <div class="mobile-menu-section">
                    <h4 class="mobile-menu-heading">Destinos</h4>
                    {destinations.length > 0 ? (
                        destinations.map((country: any) => (
                            country.localities.length > 0 ? (
                                <details class="mobile-menu-accordion">
                                    <summary class="mobile-menu-item flex justify-between items-center w-full cursor-pointer">
                                        <span>{country.name}</span>
                                        <span class="accordion-icon text-gray-400 shrink-0">▼</span>
                                    </summary>
                                    <div class="pl-4 border-l-2 border-gray-200 ml-3">
                                        <a href={`/destinos/${country.url}`} class="mobile-menu-item text-sm font-bold">Ver todo {country.name}</a>
                                        {country.localities.map((locality: any) => (
                                            <a href={`/paquetes?destino=locality:${locality.url}`} class="mobile-menu-item text-sm">{locality.name}</a>
                                        ))}
                                    </div>
                                </details>
                            ) : (
                                <a href={`/destinos/${country.url}`} class="mobile-menu-item">{country.name}</a>
                            )
                        ))
                    ) : (
                        <span class="mobile-menu-item text-gray-400">No hay destinos</span>
                    )}
                </div>
                <div class="mobile-menu-section">
                    <h4 class="mobile-menu-heading">Salidas</h4>
                    {departures.length > 0
                        ? departures.map((item: any) => <a href={`/paquetes?salida=${item.url}`} class="mobile-menu-item">{item.name}</a>)
                        : <span class="mobile-menu-item text-gray-400">No hay salidas</span>
                    }
                </div>
                <div class="mobile-menu-section">
                    <h4 class="mobile-menu-heading">Categorías</h4>
                    {travelTypes.map(item => <a href={`/paquetes?tipo=${item.urlParam}`} class="mobile-menu-item">{item.name}</a>)}
                </div>
                <div class="mobile-menu-section">
                    <h4 class="mobile-menu-heading">Temporada</h4>
                    {seasons.map(item => <a href={`/paquetes?temporada=${item.urlParam}`} class="mobile-menu-item">{item.name}</a>)}
                </div>
                <a href="/paquetes?tag=Promocion" class="mobile-menu-item font-bold text-primary bg-primary/10">Ver Promociones</a>
                <hr class="my-4"/>
                {originalNavLinks.filter(link => !['Paquetes', 'Destinos'].includes(link.text)).map(link => (
                    <a href={link.url} class="text-gray-700 hover:bg-gray-100 block px-3 py-3 rounded-md text-lg font-medium">{link.text}</a>
                ))}
            </div>
        </div>
    </div>
    <div id="side-menu-overlay" class="fixed inset-0 bg-black/40 z-[65] hidden opacity-0 transition-opacity duration-500"></div>
</header>

<style>
    /* --- Header mejorado con glassmorphism y transiciones suaves --- */
    #main-header {
        background: linear-gradient(to bottom, rgba(0,0,0,0.35), transparent);
        backdrop-filter: blur(0px);
        transition: all 0.5s ease;
    }

    #main-header.scrolled {
        background: rgba(255, 255, 255, 0.85);
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        background-image: none; /* Ensure gradient is removed */
    }

    /* --- Colores de texto y logos --- */
    /* Estado Inicial (transparente) */
    #main-header .nav-links button,
    #main-header .nav-links a,
    #main-header #mobile-menu-button {
        color: var(--white-color);
        text-shadow: 1px 1px 3px rgba(0,0,0,0.4);
    }
    #main-header .logo-dark { display: none; }
    #main-header .logo-white { display: block; }

    /* Estado con Scroll (blanco) */
    #main-header.scrolled .nav-links button,
    #main-header.scrolled .nav-links a,
    #main-header.scrolled #mobile-menu-button {
        color: var(--text-primary);
        text-shadow: none;
    }
    #main-header.scrolled .logo-dark { display: block; }
    #main-header.scrolled .logo-white { display: none; }

    /* --- Animaciones de logo y navegación --- */
    .logo-link img {
        transition: transform 0.4s ease, height 0.4s ease, opacity 0.4s ease;
    }
    #main-header.scrolled .logo-link img {
        height: 3.5rem; /* 56px */
        transform: scale(0.9);
    }
    #main-header.scrolled #main-nav {
        height: 4.5rem; /* 72px */
    }

    /* Efecto hover en enlaces y botones del nav */
    .nav-links a, .nav-links button {
        position: relative;
        transition: color 0.3s ease;
    }
    .nav-links a::after, .nav-links button::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: -4px;
        width: 0%;
        height: 2px;
        background: var(--primary-color);
        transition: width 0.3s ease;
    }
    .nav-links a:hover::after, .nav-links button:hover::after {
        width: 100%;
    }
    #main-header:not(.scrolled) .nav-links a:hover,
    #main-header:not(.scrolled) .nav-links button:hover {
        color: rgba(255, 255, 255, 0.85);
    }
    #main-header.scrolled .nav-links a:hover,
    #main-header.scrolled .nav-links button:hover {
        color: var(--primary-color);
    }

    /* Dropdown mejorado */
    .dropdown-menu {
        @apply absolute top-full left-1/2 -translate-x-1/2 mt-2 w-56 bg-white rounded-lg shadow-xl py-2;
        opacity: 0;
        transform: translateY(-10px);
        transition: all 0.3s ease;
        visibility: hidden;
    }
    .group:hover .dropdown-menu {
        opacity: 1;
        transform: translateY(0);
        visibility: visible;
    }
    .dropdown-item {
        @apply block px-4 py-2 text-gray-800 hover:bg-gray-100 hover:text-primary transition-colors duration-200;
    }

    /* --- Estilos para colapsar header en Home --- */
    #main-header.header-collapsed-right {
        background: transparent;
        box-shadow: none;
        backdrop-filter: none;
    }
    #main-header.header-collapsed-right #main-nav {
        transform: translateX(110%);
        opacity: 0;
    }
    #collapsed-menu-trigger {
        box-shadow: 0 4px 10px rgba(0,0,0,0.2);
        transition: all 0.4s ease, right 0.5s ease;
    }
    #collapsed-menu-trigger:hover {
        transform: translateX(-4px);
    }
    #main-header.header-collapsed-right #collapsed-menu-trigger {
        right: 1.5rem; /* 24px */
    }

    /* --- Estilos para el panel lateral del menú --- */
    #side-menu-panel {
        background: rgba(255,255,255,0.9);
        backdrop-filter: blur(12px);
        transform: translateX(100%);
        transition: transform 0.5s ease;
    }
    body.side-menu-is-open {
        overflow: hidden;
    }
    #side-menu-overlay {
        transition: opacity 0.5s ease;
    }
    body.side-menu-is-open #side-menu-overlay {
        display: block;
        opacity: 1;
    }
    body.side-menu-is-open #side-menu-panel {
        transform: translateX(0);
    }
    .mobile-menu-section {
        @apply px-3;
    }
    .mobile-menu-heading {
        @apply text-gray-500 font-bold pt-4 pb-2 text-sm uppercase tracking-wider;
    }
    .mobile-menu-item {
        @apply text-gray-700 hover:bg-gray-100 block py-2 rounded-md text-base font-medium;
    }

    /* Estilos para el acordeón del menú móvil */
    .mobile-menu-accordion > summary {
        list-style: none; /* Remove default marker */
    }
    .mobile-menu-accordion > summary::-webkit-details-marker {
        display: none; /* Remove default marker in Safari */
    }
    .mobile-menu-accordion .accordion-icon {
        transition: transform 0.2s;
    }
    .mobile-menu-accordion[open] > summary .accordion-icon {
        transform: rotate(180deg);
    }
</style>

<script is:inline>
    function setupHeader() {
        const header = document.querySelector('#main-header');
        if (!header) return;

        const isHomePage = header.dataset.isHome === 'true';
        const scrollThreshold = 50;
        let lastScrollY = window.scrollY;

        const handleScroll = () => {
            const currentScrollY = window.scrollY;
            const colorChangeThreshold = 20; // Umbral para el cambio de color/tamaño

            // --- Lógica de cambio de apariencia (color y tamaño) ---
            // En la página de inicio, ya empieza con 'scrolled', así que solo lo manejamos para las demás.
            if (!isHomePage) {
                if (currentScrollY > colorChangeThreshold) {
                    header.classList.add('scrolled');
                } else {
                    header.classList.remove('scrolled');
                }
            }

            // --- Lógica de colapsar/expandir (para TODAS las páginas) ---
            // Se activa al bajar más allá de la altura de la cabecera.
            if (currentScrollY > lastScrollY && currentScrollY > header.offsetHeight) {
                // Scrolling down
                if (!document.body.classList.contains('side-menu-is-open')) {
                    header.classList.add('header-collapsed-right');
                }
            } else if (currentScrollY < lastScrollY) {
                // Scrolling up
                header.classList.remove('header-collapsed-right');
            }

            lastScrollY = currentScrollY <= 0 ? 0 : currentScrollY;
        };

        // --- Lógica para abrir/cerrar el menú lateral ---
        const mobileMenuButton = document.querySelector('#mobile-menu-button');
        const collapsedTrigger = document.querySelector('#collapsed-menu-trigger');
        const closeButton = document.querySelector('#close-side-menu');
        const overlay = document.querySelector('#side-menu-overlay');

        const openMenu = () => {
            document.body.classList.add('side-menu-is-open');
        };

        const closeMenu = () => {
            document.body.classList.remove('side-menu-is-open');
        };

        if (mobileMenuButton) mobileMenuButton.addEventListener('click', openMenu);
        if (collapsedTrigger) collapsedTrigger.addEventListener('click', openMenu);
        if (closeButton) closeButton.addEventListener('click', closeMenu);
        if (overlay) overlay.addEventListener('click', closeMenu);

        window.addEventListener('scroll', handleScroll, { passive: true });
        handleScroll();
    }

    // Se asegura que el script se ejecute en la carga inicial y en las transiciones de página de Astro
    document.addEventListener('astro:page-load', setupHeader);
    setupHeader();
</script>
